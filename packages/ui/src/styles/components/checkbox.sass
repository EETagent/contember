@use 'sass:math'

@import '../common'

.#{$cui-conf-globalPrefix}checkbox
	$box-side: 1.2em
	$box-offset: .35em

	$tick-thickness: .15em
	$tick-short-length: .4em
	$tick-long-length: .75em

	// SASS lacks trig support. ðŸ˜ž
	$tick-angle-half: 40deg
	$tick-angle-half-sine: 0.642787609687 // sin($tick-angle-half)

	$t-background: .08s
	$t-tick: .18s

	$c-tick: #FFFFFF

	display: grid
	grid-template-rows: $box-side auto auto
	grid-template-columns: $box-side 1fr
	grid-template-areas: "box label" ". label" "errors errors"
	column-gap: $box-offset
	position: relative

	&::before
		display: flex
		justify-content: center
		align-items: center
		content: ''
		grid-area: box
		border-radius: .3em
		background: #FFFFFF
		color: $cui-color-gray-2
		border: $cui-control-border-width solid $cui-control-view-default-border-color
		transition-property: background-color, border-color, box-shadow
		transition-duration: $t-background, $t-background, .2s

	&-tick
		grid-area: box
		position: relative
		color: transparent
		pointer-events: none
		transition: color 0s $t-background

		&::before,
		&::after
			content: ''
			position: absolute
			top: 50%
			left: 50%
			background-color: currentColor
			border-radius: ($tick-thickness * 0.5)
			transform-origin: ($tick-thickness * 0.5) center // Essentially "left center"

		$tick-x-offset: -($tick-thickness * 0.5) - ($tick-long-length - $tick-short-length) * $tick-angle-half-sine * 0.5
		$tick-y-offset: -($tick-thickness * 0.25) + ($tick-long-length - $tick-thickness) * $tick-angle-half-sine * 0.5

		&::before
			+size($tick-short-length $tick-thickness)
			transform: translate($tick-x-offset, $tick-y-offset) rotate((90deg - $tick-angle-half)) translate(-$tick-short-length + $tick-thickness)
		&::after
			+size($tick-long-length $tick-thickness)
			transform: translate($tick-x-offset, $tick-y-offset) rotate(($tick-angle-half - 90deg))

	&-label
		grid-area: label
		display: flex
		flex-direction: column
		line-height: $cui-base-lineHeight
		padding-top: (($box-side - $cui-base-lineHeight * .8) * 0.5)

		&-main
			color: $cui-formGroup-label-color
			font-weight: $fw-medium
			font-size: .8em
			line-height: $cui-base-lineHeight
		&-description
			font-weight: $fw-normal
			font-size: .76em
			color: $cui-formGroup-labelDescription-color
			display: inline-block
			line-height: $cui-base-lineHeight

	&-errors
		margin-top: .1em
		grid-area: errors

	&.is-hovered
		&::before
			border-color: darken($cui-control-view-default-border-color, 5)

	&.is-checked
		&::before
			border-color: $cui-control-view-default-distinction-color
			background-color: $cui-control-view-default-distinction-color

	&.is-checked &
		&-tick
			// Repeating the color is easier than fiddling with another set of delays.
			// Animating width (and not transforming scale) so that we always get a nice border-radius
			@keyframes checkbox-tick-short
				0%
					color: $c-tick
					width: $tick-thickness
				100%
					color: $c-tick
					width: $tick-short-length
			@keyframes checkbox-tick-long
				0%
					color: $c-tick
					width: $tick-thickness
				100%
					color: $c-tick
					width: $tick-long-length

			$t-short-factor: math.div($tick-short-length, $tick-long-length + $tick-short-length)
			$t-short: $t-tick * $t-short-factor
			&::before
				animation: $t-short checkbox-tick-short $t-background ease-in forwards
			&::after
				animation: ($t-tick * (1 - $t-short-factor)) checkbox-tick-long ($t-background + $t-short) ease-in forwards

	&.is-indeterminate
		&::before
			border-width: $cui-control-border-width
			border-style: dashed
			content: '?'

	&.is-focused
		&::before
			box-shadow: 0 0 0 .2em rgba($cui-control-view-default-distinction-color, $cui-control-focus-opacity)
	&.is-focused:not(.is-checked)
		&::before
			border-color: lighten($cui-control-view-default-distinction-color, 10)

	&.is-disabled
		cursor: not-allowed
		&::before
			border-color: rgba($cui-control-view-default-border-color, .5)
	&.is-disabled.is-checked
		&::before
			border-color: rgba($cui-control-view-default-border-color, .7)
			background-color: rgba($cui-control-view-default-border-color, .7)


	@each $name, $settings in $cui-control-validation
		$color: map_get($settings, color)
		$borderColor: map_get($settings, borderColor)

		&.is-#{$name}
			&::before
				color: $color
				border-color: $borderColor

			&.is-focused.is-indeterminate::before,
			&.is-focused::before
				color: $color
				border-color: $borderColor
				box-shadow: 0 0 0 .2em rgba($borderColor, $cui-control-focus-opacity)
